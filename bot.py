from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler, MessageHandler, filters
import asyncio
import time

# –¢–≤—ñ–π —Ç–æ–∫–µ–Ω
BOT_TOKEN = "7460415583:AAFLutgu1nva78UxleLGJcWc4BVJAH5RIzo"

# –¢–µ–∫—Å—Ç –¥–ª—è /start
START_TEXT = """
üçè <b>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –Ω–∞—à–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω—É!</b> üçè

–î–µ –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —Ç—ñ–ª—å–∫–∏ –Ω–∞–π–∫—Ä–∞—â—É —Ç–µ—Ö–Ω—ñ–∫—É Apple ‚Äî –Ω–æ–≤—É —Ç–∞ –±/—É –∑–∞ –≤–∏–≥—ñ–¥–Ω–∏–º–∏ —Ü—ñ–Ω–∞–º–∏! üòä

<b>–í—ñ–¥—á—É–π—Ç–µ —è–∫—ñ—Å—Ç—å Apple</b> –∑ –Ω–∞—à–∏–º –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –Ω–æ–≤–∏—Ö —Ç–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤! üçè

<b>–®—É–∫–∞—î—Ç–µ –Ω–∞–¥—ñ–π–Ω—É —Ç–µ—Ö–Ω—ñ–∫—É Apple?</b> –£ –Ω–∞—Å —î –Ω–æ–≤—ñ –º–æ–¥–µ–ª—ñ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó, —â–æ –∑–∞–¥–æ–≤–æ–ª—å–Ω—è—Ç—å –Ω–∞–≤—ñ—Ç—å –Ω–∞–π–≤–∏–±–∞–≥–ª–∏–≤—ñ—à–∏—Ö –ø–æ–∫—É–ø—Ü—ñ–≤! üì±

<b>–û–±–∏—Ä–∞–π—Ç–µ –Ω–æ–≤—ñ —Ç–∞ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ Apple</b> ‚Äî —è–∫—ñ—Å—Ç—å —ñ —ñ–Ω–Ω–æ–≤–∞—Ü—ñ—ó –∑–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—é —Ü—ñ–Ω–æ—é —Ç—ñ–ª—å–∫–∏ –≤ –Ω–∞—à–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñ! üíª
"""

# –¢–µ–∫—Å—Ç –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
MAIN_MENU_TEXT = """
üåü <b>–í—ñ—Ç–∞—î–º–æ –≤–∞—Å —É –Ω–∞—à–æ–º—É –º–∞–≥–∞–∑–∏–Ω—ñ</b> ‚Äî –º—ñ—Å—Ü—ñ, –¥–µ –∑—Ä—É—á–Ω—ñ—Å—Ç—å —ñ –≤–∏–≥–æ–¥–∞ –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á!

üõçÔ∏è <b>–î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–ú–ê–ì–ê–ó–ò–ù"</b>

üöö <b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ—Å—Ç–∞–≤–∫—É - –∫–Ω–æ–ø–∫–∞ "–î–û–°–¢–ê–í–ö–ê"</b>

<b>–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ç—Ä—ñ–±–Ω—É –¥—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ üëá</b>
"""

# –¢–µ–∫—Å—Ç –¥–ª—è –º–∞–≥–∞–∑–∏–Ω—É
SHOP_TEXT = """
üõçÔ∏è <b>–ù–ê–® –ú–ê–ì–ê–ó–ò–ù</b> üõçÔ∏è

<b>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ –ø–æ–≤–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä—ñ–≤:</b>

üëá –ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤
"""

# –¢–µ–∫—Å—Ç –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏
DELIVERY_TEXT = """
üöö <b>–î–û–°–¢–ê–í–ö–ê</b>

<b>–ß–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –£–∫—Ä–∞—ó–Ω—ñ:</b>
‚Ä¢ –ù–æ–≤–∞ –ü–æ—à—Ç–∞ - 1-2 –¥–Ω—ñ
‚Ä¢ –£–∫—Ä–ø–æ—à—Ç–∞ - 2-3 –¥–Ω—ñ  
‚Ä¢ –ö—É—Ä'—î—Ä–æ–º –ø–æ –ö–∏—î–≤—É - 1 –¥–µ–Ω—å
"""

async def send_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    try:
        # –°–ø–µ—Ä—à—É –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
        if update.message:
            await update.message.reply_text(START_TEXT, parse_mode="HTML")
        
        # –ü–æ—Ç—ñ–º –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üõçÔ∏è –ú–ê–ì–ê–ó–ò–ù", url="t.me/AppleStoreUk_bot/Shop")],
            [InlineKeyboardButton("üöö –î–û–°–¢–ê–í–ö–ê", callback_data="delivery")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        if update.callback_query:
            await update.callback_query.edit_message_text(MAIN_MENU_TEXT, reply_markup=reply_markup, parse_mode="HTML")
        else:
            await update.message.reply_text(MAIN_MENU_TEXT, reply_markup=reply_markup, parse_mode="HTML")
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –º–µ–Ω—é: {e}")

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    await send_main_menu(update, context)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–æ–∫"""
    try:
        query = update.callback_query
        await query.answer()
        
        if query.data == "delivery":
            keyboard = [[InlineKeyboardButton("üîô –ù–ê–ó–ê–î", callback_data="back_main")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.edit_message_text(DELIVERY_TEXT, reply_markup=reply_markup, parse_mode="HTML")
        
        elif query.data == "back_main":
            await send_main_menu(update, context)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É –∫–Ω–æ–ø–æ–∫: {e}")

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –º–µ–Ω—é"""
    try:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –º–µ–Ω—é –ø—Ä–∏ –±—É–¥—å-—è–∫–æ–º—É —Ç–µ–∫—Å—Ç—ñ
        await send_main_menu(update, context)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ —Ç–µ–∫—Å—Ç—É: {e}")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫"""
    error = context.error
    print(f"–ü–æ–º–∏–ª–∫–∞: {error}")
    print(f"–¢–∏–ø –ø–æ–º–∏–ª–∫–∏: {type(error)}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    max_retries = 5
    retry_delay = 10  # —Å–µ–∫—É–Ω–¥
    
    for attempt in range(max_retries):
        try:
            print(f"üîÑ –°–ø—Ä–æ–±–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ {attempt + 1}/{max_retries}...")
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫ –∑ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
            application = Application.builder().token(BOT_TOKEN).build()
            
            # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
            application.add_handler(CommandHandler("start", start_command))
            application.add_handler(CallbackQueryHandler(button_handler))
            application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
            application.add_error_handler(error_handler)
            
            print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —ñ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!")
            print("üéØ –¢–µ–ø–µ—Ä –º–µ–Ω—é –∑'—è–≤–ª—è—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!")
            print("üîÑ –ë–æ—Ç –º–∞—î —Å—Ç–∞–±—ñ–ª—å–Ω—É —Ä–æ–±–æ—Ç—É!")
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
            application.run_polling(
                drop_pending_updates=True,
                allowed_updates=Update.ALL_TYPES
            )
            break
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É (—Å–ø—Ä–æ–±–∞ {attempt + 1}): {e}")
            if attempt < max_retries - 1:
                print(f"‚è≥ –ß–µ–∫–∞—î–º–æ {retry_delay} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é...")
                time.sleep(retry_delay)
                retry_delay *= 2  # –ó–±—ñ–ª—å—à—É—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É
            else:
                print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ –ø—ñ—Å–ª—è –≤—Å—ñ—Ö —Å–ø—Ä–æ–±")

if __name__ == "__main__":
    main()
